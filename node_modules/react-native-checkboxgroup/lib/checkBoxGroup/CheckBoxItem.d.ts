/// <reference types="react" />
/**
 * Created by syjmac on 2017/9/19.
 */
import * as React from "react";
import { Selectable, SelectableProps, SelectedStatus } from "./Selectable";
export interface ItemProps extends SelectableProps {
    selectedChanged: (key: string, isSelected: boolean) => void;
    disabled?: boolean;
    onChange: (v: SelectedStatus) => void;
    identifier: string;
    ref: (item: Selectable) => void;
    key: string;
    mode?: string;
}
export default class CheckBoxItem extends React.Component<ItemProps, {
    isSelected: boolean;
}> implements Selectable {
    static IDENTIFIER: string;
    static defaultProps: {
        disabled: boolean;
        selectedChanged(k: string, isSelected: boolean): void;
        renderCheckBox: (isSelected: boolean) => JSX.Element;
        rowTemplate: (checkbox: React.ReactElement<any>, item: React.ReactElement<any>, key: string) => JSX.Element;
    };
    state: {
        isSelected: boolean;
    };
    getSelectedValue(): {
        key: string;
        value: boolean;
    };
    select(cb?: Function): void;
    deselect(cb?: Function): void;
    toggle: () => void;
    componentDidUpdate(prevProps: ItemProps): void;
    render(): JSX.Element;
}
