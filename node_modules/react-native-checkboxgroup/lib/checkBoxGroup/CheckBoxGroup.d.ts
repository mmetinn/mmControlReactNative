/// <reference types="react" />
/**
 * Created by syjmac on 2017/9/23.
 */
import * as React from "react";
import { Selectable, SelectableProps, SelectedStatus } from "./Selectable";
export interface Prop extends SelectableProps {
    isGroupTitleBarVisiable?: boolean;
    renderTitle?: () => React.ReactElement<any>;
    renderFooter?: () => React.ReactElement<any>;
    onChange?: (k: SelectedStatus) => void;
    disabled?: string[];
    style?: object;
    selectedChanged?: (key: string, isSelected: boolean) => void;
    identifier?: string;
    key: string;
    mode?: "RadioGroupMode";
    __Selectable_IDENTIFIER__?: any;
}
export default class CheckBoxGroup extends React.Component<Prop, {
    isSelected: boolean;
}> implements Selectable {
    static IDENTIFIER: string;
    static defaultProps: {
        renderCheckBox: (isSelected: boolean, disabled?: boolean) => JSX.Element;
        renderTitle: () => null;
        renderFooter: () => null;
        isGroupTitleBarVisiable: boolean;
        onChange: (v: SelectedStatus) => void;
        __Selectable_IDENTIFIER__: string;
    };
    state: {
        isSelected: boolean;
    };
    private bs;
    private keys;
    private _items;
    private _identifier;
    private onKey;
    private addItem(key, item);
    private removeItem(key);
    private getRandomBum();
    /**获取自组件的key数组*/
    private getKeysArr(props);
    private syncChildrenChange(nextProps);
    constructor(props: Prop, context: any);
    componentWillReceiveProps(nextProps: Prop, nextState: Prop): void;
    private isRadioMode();
    getSelectedValue(isFilterFalse?: boolean): {
        key: string;
        value: boolean;
        children: Map<string, SelectedStatus>;
    };
    select(cb?: Function): void;
    deselect(cb?: Function): void;
    /**
     * 单选模式不能在组级调用全选，只能用于反选，但是必须明确的传入trueOrFalse =false
     * @param trueOrFalse
     */
    toggle: (trueOrFalse?: boolean | undefined) => void;
    private isSelectableComp(reactChild);
    private selectedChanged;
    private radioSelectedChanged;
    private onChange;
    private enrichChildProps;
    private isGroupDisabled();
    private getTitleBar();
    private groupFooter();
    render(): JSX.Element;
}
