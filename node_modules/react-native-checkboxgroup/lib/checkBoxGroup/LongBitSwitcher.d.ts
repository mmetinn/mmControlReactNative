/**
 * Created by syjmac on 2017/8/23.
 *
 *开关器 可以设置任意位数的开关位 并且灵活控制每位的开关状态
 *
 * 参数不与许空字符串和 0  之类本身为false的值
 *
 *
 let a=new Switcher("over","xx","v","a")
 a.on("over").on("v").on("a").off("v").off()
 console.log(a.isOn("a"));
 console.log(a.isOn("over"));
 console.log(a.isOn());

 console output
 _readable 1
 _readable 101
 _readable 1101
 _readable 1001
 _readable 1001
 true
 true
 true
 */
import { IBitSwitcher } from "./BitSwitcher";
export default class LongBitSwitcher<T> implements IBitSwitcher<T> {
    readonly MAX_LEN: number;
    private map;
    constructor(...keys: T[]);
    getKeys(): IterableIterator<T>;
    isAllOn(): boolean;
    isOn(flag?: T): boolean;
    on(flag?: T): this;
    off(flag: T): this;
    copyFrom(from: IBitSwitcher<T>): this;
    switcherDiff(target: IBitSwitcher<T> | Array<T>): {
        added: T[];
        deleted: T[];
        diff: boolean;
    };
}
